apiVersion: v1
kind: ConfigMap
metadata:
  name: otelcol-ingress-config
  namespace: monitoring
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
      zipkin: # CoreDNS
        endpoint: 0.0.0.0:9411
      syslog:
        udp:
          listen_address: "0.0.0.0:1514"
          add_attributes: true
        protocol: rfc5424

      # TODO - not used
      prometheus:
        config:
          scrape_configs:
            - job_name: 'cilium-operator'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                  regex: cilium-operator
                  action: keep
            - job_name: 'envoy'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                  regex: cilium
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: keep
                  regex: 9964

    processors:
      transform:
        metric_statements:
          - context: datapoint
            statements:
            - set(resource.attributes["service.name"], resource.attributes["k8s.container.name"]) where resource.attributes["service.name"] == nil
            - set(resource.attributes["service.name"], "unknown") where resource.attributes["service.name"] == nil
        log_statements:
          - statements:
            - set(resource.attributes["service.name"], resource.attributes["k8s.container.name"]) where resource.attributes["service.name"] == nil
            - set(resource.attributes["service.name"], log.attributes["hostname"]) where resource.attributes["service.name"] == nil and log.attributes['hostnames'] != nil
            - set(resource.attributes["service.name"], 'kube-apiserver') where resource.attributes["service.name"] == nil and log.attributes['k8s.resource.name'] == 'events'
            - set(resource.attributes["service.name"], "unknown") where resource.attributes["service.name"] == nil
        trace_statements:
          - statements:
            - set(resource.attributes["service.name"], resource.attributes["k8s.container.name"]) where resource.attributes["service.name"] == nil
            - set(resource.attributes["service.name"], "unknown") where resource.attributes["service.name"] == nil

    exporters:
      loadbalancing:
        routing_key: service
        protocol:
          otlp:
            tls:
              insecure: true
        resolver:
          static:
            hostnames:
              - otelcol-process.monitoring.svc.cluster.local:4317


    service:
      pipelines:
        traces:
          receivers: [otlp, zipkin]
          processors: [transform]
          exporters: [loadbalancing]
        logs:
          receivers: [otlp, syslog]
          processors: [transform]
          exporters: [loadbalancing]
        metrics:
          receivers: [otlp, prometheus]
          processors: [transform]
          exporters: [loadbalancing]
